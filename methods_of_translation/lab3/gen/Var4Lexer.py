# Generated from C:/Users/Legend/PycharmProjects/Translation_lab3/check_antlr\Var4.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,20,130,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,
        7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,
        10,4,10,74,8,10,11,10,12,10,75,1,10,1,10,1,11,1,11,1,12,3,12,83,
        8,12,1,12,1,12,1,13,1,13,5,13,89,8,13,10,13,12,13,92,9,13,1,14,4,
        14,95,8,14,11,14,12,14,96,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,
        1,16,1,16,3,16,109,8,16,1,17,1,17,1,17,1,17,3,17,115,8,17,1,18,1,
        18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,3,19,129,8,
        19,0,0,20,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
        12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,1,0,8,2,0,9,9,
        32,32,1,0,59,59,1,0,13,13,1,0,10,10,2,0,65,90,97,122,3,0,48,57,65,
        90,97,122,1,0,48,57,3,0,42,43,45,45,47,47,142,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,
        0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,
        0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,1,41,1,0,0,0,3,43,1,0,
        0,0,5,45,1,0,0,0,7,47,1,0,0,0,9,49,1,0,0,0,11,51,1,0,0,0,13,54,1,
        0,0,0,15,56,1,0,0,0,17,61,1,0,0,0,19,66,1,0,0,0,21,73,1,0,0,0,23,
        79,1,0,0,0,25,82,1,0,0,0,27,86,1,0,0,0,29,94,1,0,0,0,31,98,1,0,0,
        0,33,108,1,0,0,0,35,114,1,0,0,0,37,116,1,0,0,0,39,128,1,0,0,0,41,
        42,5,40,0,0,42,2,1,0,0,0,43,44,5,41,0,0,44,4,1,0,0,0,45,46,5,123,
        0,0,46,6,1,0,0,0,47,48,5,125,0,0,48,8,1,0,0,0,49,50,5,44,0,0,50,
        10,1,0,0,0,51,52,5,105,0,0,52,53,5,102,0,0,53,12,1,0,0,0,54,55,5,
        58,0,0,55,14,1,0,0,0,56,57,5,101,0,0,57,58,5,108,0,0,58,59,5,105,
        0,0,59,60,5,102,0,0,60,16,1,0,0,0,61,62,5,101,0,0,62,63,5,108,0,
        0,63,64,5,115,0,0,64,65,5,101,0,0,65,18,1,0,0,0,66,67,5,119,0,0,
        67,68,5,104,0,0,68,69,5,105,0,0,69,70,5,108,0,0,70,71,5,101,0,0,
        71,20,1,0,0,0,72,74,7,0,0,0,73,72,1,0,0,0,74,75,1,0,0,0,75,73,1,
        0,0,0,75,76,1,0,0,0,76,77,1,0,0,0,77,78,6,10,0,0,78,22,1,0,0,0,79,
        80,7,1,0,0,80,24,1,0,0,0,81,83,7,2,0,0,82,81,1,0,0,0,82,83,1,0,0,
        0,83,84,1,0,0,0,84,85,7,3,0,0,85,26,1,0,0,0,86,90,7,4,0,0,87,89,
        7,5,0,0,88,87,1,0,0,0,89,92,1,0,0,0,90,88,1,0,0,0,90,91,1,0,0,0,
        91,28,1,0,0,0,92,90,1,0,0,0,93,95,7,6,0,0,94,93,1,0,0,0,95,96,1,
        0,0,0,96,94,1,0,0,0,96,97,1,0,0,0,97,30,1,0,0,0,98,99,5,61,0,0,99,
        32,1,0,0,0,100,101,5,43,0,0,101,109,5,61,0,0,102,103,5,45,0,0,103,
        109,5,61,0,0,104,105,5,42,0,0,105,109,5,61,0,0,106,107,5,47,0,0,
        107,109,5,61,0,0,108,100,1,0,0,0,108,102,1,0,0,0,108,104,1,0,0,0,
        108,106,1,0,0,0,109,34,1,0,0,0,110,111,5,43,0,0,111,115,5,43,0,0,
        112,113,5,45,0,0,113,115,5,45,0,0,114,110,1,0,0,0,114,112,1,0,0,
        0,115,36,1,0,0,0,116,117,7,7,0,0,117,38,1,0,0,0,118,119,5,61,0,0,
        119,129,5,61,0,0,120,121,5,33,0,0,121,129,5,61,0,0,122,129,5,60,
        0,0,123,124,5,60,0,0,124,129,5,61,0,0,125,129,5,62,0,0,126,127,5,
        62,0,0,127,129,5,61,0,0,128,118,1,0,0,0,128,120,1,0,0,0,128,122,
        1,0,0,0,128,123,1,0,0,0,128,125,1,0,0,0,128,126,1,0,0,0,129,40,1,
        0,0,0,8,0,75,82,90,96,108,114,128,1,6,0,0
    ]

class Var4Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    SPS = 11
    ALT = 12
    WSP = 13
    NAME = 14
    INT = 15
    EQ = 16
    MOD = 17
    MODONE = 18
    OP = 19
    COMP = 20

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'{'", "'}'", "','", "'if'", "':'", "'elif'", 
            "'else'", "'while'", "'='" ]

    symbolicNames = [ "<INVALID>",
            "SPS", "ALT", "WSP", "NAME", "INT", "EQ", "MOD", "MODONE", "OP", 
            "COMP" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "SPS", "ALT", "WSP", "NAME", "INT", 
                  "EQ", "MOD", "MODONE", "OP", "COMP" ]

    grammarFileName = "Var4.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


